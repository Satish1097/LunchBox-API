# Generated by Django 5.1.1 on 2024-10-17 03:55

import authapp.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cuisine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobile', models.CharField(max_length=13, unique=True)),
                ('secret_key', models.CharField(max_length=50)),
                ('generated_at', models.DateTimeField(auto_now=True)),
                ('is_used', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Plan_Charges', models.DecimalField(decimal_places=2, max_digits=10)),
                ('Plan_Description', models.TextField()),
                ('Plan_Type', models.CharField(choices=[('Monthly', 'Monthly'), ('Weekly', 'Weekly')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schoolName', models.CharField(max_length=100, unique=True)),
                ('School_Contact_Number', models.CharField(max_length=13, unique=True)),
                ('School_Address', models.TextField(max_length=1000)),
                ('School_Timing', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='SchoolArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('name', models.CharField(max_length=256)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('mobile', models.CharField(max_length=13)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_profile_completed', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', authapp.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Child',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Full_Name', models.CharField(max_length=256)),
                ('Date_of_Birth', models.DateTimeField()),
                ('Gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=10)),
                ('Class', models.CharField(max_length=20)),
                ('Division', models.CharField(max_length=10)),
                ('Notes', models.CharField(blank=True, max_length=1000)),
                ('Child_Image', models.ImageField(null=True, upload_to='ChildImage/')),
                ('Parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('School_Name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authapp.school')),
                ('School_Area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authapp.schoolarea')),
            ],
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Item_Image', models.ImageField(upload_to='MenuItem/')),
                ('Item_Name', models.CharField(max_length=100)),
                ('Item_Description', models.TextField()),
                ('Item_Price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('cuisine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authapp.cuisine')),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Item_Quantity', models.PositiveBigIntegerField()),
                ('child', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='authapp.child')),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authapp.menuitem')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('orderid', models.CharField(default=uuid.uuid4, editable=False, max_length=100, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('order_status', models.CharField(choices=[('Pending', 'Pending'), ('Processing', 'Processing'), ('Out For Delivery', 'Out For Delivery'), ('Completed', 'Completed'), ('Cancelled', 'Cancelled')], default='Pending', max_length=20)),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authapp.child')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Item_Quantity', models.PositiveBigIntegerField(default=1)),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='authapp.menuitem')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='authapp.order')),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ratings', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)])),
                ('menu_item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='authapp.menuitem')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='authapp.child')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authapp.plan')),
            ],
        ),
        migrations.CreateModel(
            name='TransactionDetail',
            fields=[
                ('Transaction_id', models.CharField(default=uuid.uuid4, editable=False, max_length=100, primary_key=True, serialize=False)),
                ('Payment_order_id', models.CharField(max_length=100, null=True, unique=True)),
                ('transaction_amount', models.DecimalField(decimal_places=3, max_digits=10)),
                ('payment_status', models.CharField(choices=[('Done', 'Done'), ('Failed', 'Failed'), ('Pending', 'Pending')], default='Pending', max_length=10)),
                ('order_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='authapp.order')),
                ('subscription_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='authapp.subscription')),
            ],
        ),
        migrations.CreateModel(
            name='UserToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.TextField()),
                ('refresh_token', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
